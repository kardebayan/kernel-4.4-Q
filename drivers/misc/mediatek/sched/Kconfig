menu "MTK runqueue statistic calculation and CPU affinity"
config MT_CPU_AFFINITY
	bool "Enhance CPU affinity in hotplug"
	depends on HOTPLUG_CPU
	help
	  The CPU affinity library for Hotplug enhancement is to achieve set CPU
	  affinity without take care kernel behavior and to avoid affect the original
	  Linux design.
endmenu

menu "MT load balance and schedule enhancement"
config MT_SCHED_INTEROP
	bool "mtk scheduling interopation enhancement"
	default n
	help
	   Original Linux Design, RT & CFS do load balance seperatedly,
	   and let would result in unload balance.
	   that is, one CPU has more than 2 tasks, however, one CPU is IDLE
	   We make RT & CFS to check each other and make load more balance.

config MT_SCHED_TRACE
	bool "mt scheduling trace, output mtk schedule trace into FTRACE"
	default n
	help
	   Provide RT info via ftrace,
	   mt_sched_printf for scheduling module to output info and
	   RT scheduling info to ftrace,
	   including select_task_rq, check_preempt, find_lowest_rq.
	   Say no if not sure.

config MT_SCHED_DEBUG
	bool "mt scheduling log, also output the scheduling log into Kernel log"
	depends on MT_SCHED_TRACE
	default n
	help
	   MTK scheduling log, add scheduling log into Kernel log.
	   Including print scheduler debug information at KE and print load balance
	   information at kernel log.
	   Say no if not sure.

config MT_DEBUG_PREEMPT
	bool "debug preempt, output the preempt enable/disable to FTRACE"
	default n
	help
	   Provide preempt debug.
	   Dump preempt disable/enable backtrace into ftrace.
	   Dump preempt count in kernel log.
	   Say no if not sure.
endmenu

menu "MTK Cluster MultiProcessor Scheduler"
config MTK_CPU_TOPOLOGY
	bool "MTK cpu topology infrastructure"
	depends on (64BIT && OF && SMP) || (ARM_CPU_TOPOLOGY && OF)
	default n
	help
	  Say N if you want to build up another wheel
	  sched_init -> cmp_cputopo_domain_seutp()
	  rest_init -> fork kernel_init -> kernel_init_freeable ... -> parse_dt_topology
	  we focus to build up cpu topology and domain before scheduler runs.
endmenu

menu "MTK runqueue statistic calculation"
config MTK_SCHED_RQAVG_KS
	bool "Enable runqueue statistic calculation used in kernel space operation"
	depends on SMP
	help
		MTK ruqueue statistic kernel space CPUfreq governors, e.g., hotplug
		TLP estimation,
		heavy task detection and
		per CPU load for kernel space CPUfreq governors

config MTK_SCHED_RQAVG_US
	bool "Enable runqueue staticsic calculation used in user space operation"
	depends on SMP && HIGH_RES_TIMERS
	help
		TLP estimation for user space CPUfreq governors
endmenu
